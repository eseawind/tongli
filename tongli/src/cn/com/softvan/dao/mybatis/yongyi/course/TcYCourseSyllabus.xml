<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.softvan.dao.daointer.yongyi.course.ITcYCourseSyllabusDao" >
	<sql id="Base_Column_List" >
	t1.id,
	t1.course_id,
	t1.day,
	t1.begin_time,
	t1.end_time,
	t1.note,
	t1.date_created,
	t1.create_id,
	t1.create_ip,
	t1.last_updated,
	t1.update_id,
	t1.update_ip,
	t1.del_flag,
	t1.version,
	t1.course_status,
	t1.detail_info,
	t1.addres,
	t1.type
  </sql>
  <select id="selectByPrimaryKey" resultType="tcYCourseSyllabusBean" parameterType="tcYCourseSyllabus" >
    select 
    <include refid="Base_Column_List" />
    from tc_y_course_syllabus t1
    where t1.id = #{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="tcYCourseSyllabus" >
    delete from tc_y_course_syllabus
    where id = #{id}
  </delete>
  <insert id="insert" parameterType="tcYCourseSyllabus" >
    insert into tc_y_course_syllabus (
	    id,
		course_id,
		day,
		begin_time,
		end_time,
		note,
		date_created,
		create_id,
		create_ip,
		last_updated,
		del_flag,
		version,
		course_status,
		detail_info,
		addres,
		type
      ) values (
	    #{id},
		#{course_id},
		#{day},
		#{begin_time},
		#{end_time},
		#{note},
		now(),
		#{create_id},
		#{create_ip},
		now(),
		'0',
		 0,
		'0',
		#{detail_info},
		#{addres},
		#{type}
    )
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="tcYCourseSyllabus" >
    update tc_y_course_syllabus set version=version+1
    ,last_updated=now()
	,update_id=#{update_id}
	,update_ip=#{update_ip}
	<if test="course_id!= null" >,course_id=#{course_id}</if>
	<if test="day!= null" >,day=#{day}</if>
	<if test="begin_time!= null" >,begin_time=#{begin_time}</if>
	<if test="end_time!= null" >,end_time=#{end_time}</if>
	<if test="note!= null" >,note=#{note}</if>
	<if test="del_flag!= null" >,del_flag=#{del_flag}</if>
	<if test="course_status!= null" >,course_status=#{course_status}</if>
	<if test="detail_info!= null" >,detail_info=#{detail_info}</if>
	<if test="addres!= null" >,addres=#{addres}</if>
	<if test="type!= null" >,type=#{type}</if>
	where id=#{id}
  </update>
  	<!--判断是否存在-->
    <select id="isDataYN" parameterType="tcYCourseSyllabus" resultType="int">
    select count(0) from tc_y_course_syllabus where id=#{id}
    </select>
    <!--
	 * <p>信息列表 分页。</p>
	public List<TcCourseSyllabusBean> findDataIsPage(IEntity dto);
	-->
	<select id="findDataIsPage" resultType="tcYCourseSyllabusBean" parameterType="tcYCourseSyllabus" >
    select
	<include refid="Base_Column_List"/>
	,
	t2.title
	from tc_y_course_syllabus t1
	left join tc_y_course t2 on (t1.course_id=t2.id)
    where 1=1
    <choose>
    	<when test="del_flag!=null">
    		and t1.del_flag=#{del_flag}
    	</when>
    	<otherwise>
    	    and t1.del_flag='0'
    	</otherwise>
    </choose>
    <if test="type!= null and type!=''" > and t1.type=#{type}</if>
     <!-- 已完成课程 -->
    <if test="course_status!=null and course_status==1">
   		<![CDATA[
    	and (( TIMESTAMP(CONCAT(t1.day,' ',t1.end_time),'%Y-%m-%d %h:%i:%s')<=TIMESTAMP(now(),'%Y-%m-%d %h:%i:%s') ) or t1.course_status=#{course_status} )
		]]>
    </if>
    <!-- 未完成课程 -->
    <if test="course_status!=null and course_status==0">
    	<![CDATA[
    	and ( TIMESTAMP(CONCAT(t1.day,' ',t1.end_time),'%Y-%m-%d %h:%i:%s')>TIMESTAMP(now(),'%Y-%m-%d %h:%i:%s') )
		]]>
    </if>
    order by t1.day asc,t1.begin_time asc,t1.end_time asc
    </select>
	<!-- 
	 * <p>信息列表。</p>
	public List<TcCourseSyllabusBean> findDataIsList(IEntity dto); -->
	<select id="findDataIsList" resultType="tcYCourseSyllabusBean" parameterType="tcYCourseSyllabus" >
	select
	<include refid="Base_Column_List"/>
	,
	t2.title
	from tc_y_course_syllabus t1
	left join tc_y_course t2 on (t1.course_id=t2.id)
    where 1=1
    <choose>
    	<when test="del_flag!=null">
    		and t1.del_flag=#{del_flag}
    	</when>
    	<otherwise>
    	    and t1.del_flag='0'
    	</otherwise>
    </choose>
     <if test="type!= null and type!=''" > and t1.type=#{type}</if>
     <!-- 已完成课程 -->
    <if test="course_status!=null and course_status==1">
   		<![CDATA[
    	and (( TIMESTAMP(CONCAT(t1.day,' ',t1.end_time),'%Y-%m-%d %h:%i:%s')<=TIMESTAMP(now(),'%Y-%m-%d %h:%i:%s') ) or t1.course_status=#{course_status} )
		]]>
    </if>
    <!-- 未完成课程 -->
    <if test="course_status!=null and course_status==0">
    	<![CDATA[
    	and ( TIMESTAMP(CONCAT(t1.day,' ',t1.end_time),'%Y-%m-%d %h:%i:%s')>TIMESTAMP(now(),'%Y-%m-%d %h:%i:%s') )
		]]>
    </if>
    order by t1.day asc,t1.begin_time asc,t1.end_time asc
   </select>
   <!-- 逻辑删除 -->
   <update id="deleteById" parameterType="tcYCourseSyllabus">
	  	update tc_y_course_syllabus set version=version+1,last_updated=now(),del_flag='1',update_id=#{update_id}
	   ,update_ip=#{update_ip}
	  	where id=#{id}
   </update>
   <!-- 恢复逻辑删除的数据 -->
   <update id="recoveryDataById" parameterType="tcYCourseSyllabus">
	  	update tc_y_course_syllabus set version=version+1,last_updated=now(),del_flag='0',update_id=#{update_id}
	   ,update_ip=#{update_ip}
	  	where id=#{id}
   </update>
   <!--  <p>信息列表。</p>  -->
	<select id="findDataIsListDate" resultType="tcYCourseSyllabusBean" parameterType="tcYCourseSyllabus" >
	select
		t1.day,
		t1.begin_time,
		t1.end_time
	from tc_y_course_syllabus t1
    where t1.course_id=#{course_id}
    <choose>
    	<when test="del_flag!=null">
    		and t1.del_flag=#{del_flag}
    	</when>
    	<otherwise>
    	    and t1.del_flag='0'
    	</otherwise>
    </choose>
     <if test="type!= null and type!=''" > and t1.type=#{type}</if>
  		 <![CDATA[
    	and ( TIMESTAMP(CONCAT(t1.day,' ',t1.end_time),'%Y-%m-%d %h:%i:%s')>TIMESTAMP(now(),'%Y-%m-%d %h:%i:%s') )
		]]>
    order by t1.day asc,t1.begin_time asc,t1.end_time asc
   </select>
</mapper>