<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.softvan.dao.daointer.course.ITcCourseDao" >
  <sql id="Base_Column_List" >
	id,
	subject_id,
	course_type,
	duration,
	duration_unit,
	age_group,
	number,
	market_price,
	member_price,
	is_indoor,
	is_site_fee,
	addres,
	note,
	date_created,
	create_id,
	create_ip,
	last_updated,
	update_id,
	update_ip,
	del_flag,
	version,
	pic_url,
	detail_info,
	title
  </sql>
  <select id="selectByPrimaryKey" resultType="tcCourseBean" parameterType="tcCourse" >
    select 
    <include refid="Base_Column_List" />
    from tc_course
    where id = #{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="tcCourse" >
    delete from tc_course
    where id = #{id}
  </delete>
  <insert id="insert" parameterType="tcCourse" >
    insert into tc_course (
	    id,
		subject_id,
		course_type,
		duration,
		duration_unit,
		age_group,
		number,
		market_price,
		member_price,
		is_indoor,
		is_site_fee,
		addres,
		note,
		date_created,
		create_id,
		create_ip,
		last_updated,
		del_flag,
		version,
		pic_url,
		detail_info,
		title
      ) values (
	    #{id},
		#{subject_id},
		#{course_type},
		#{duration},
		#{duration_unit},
		#{age_group},
		#{number},
		#{market_price},
		#{member_price},
		#{is_indoor},
		#{is_site_fee},
		#{addres},
		#{note},
		now(),
		#{create_id},
		#{create_ip},
		now(),
		'0',
		 0,
		#{pic_url},
		#{detail_info},
		#{title}
    )
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="tcCourse" >
    update tc_course set version=version+1
    ,last_updated=now()
	,update_id=#{update_id}
	,update_ip=#{update_ip}
	<if test="subject_id!= null" >,subject_id=#{subject_id}</if>
	<if test="course_type!= null" >,course_type=#{course_type}</if>
	<if test="duration!= null" >,duration=#{duration}</if>
	<if test="duration_unit!= null" >,duration_unit=#{duration_unit}</if>
	<if test="age_group!= null" >,age_group=#{age_group}</if>
	<if test="number!= null" >,number=#{number}</if>
	<if test="market_price!= null" >,market_price=#{market_price}</if>
	<if test="member_price!= null" >,member_price=#{member_price}</if>
	<if test="is_indoor!= null" >,is_indoor=#{is_indoor}</if>
	<if test="is_site_fee!= null" >,is_site_fee=#{is_site_fee}</if>
	<if test="addres!= null" >,addres=#{addres}</if>
	<if test="note!= null" >,note=#{note}</if>
	<if test="del_flag!= null" >,del_flag=#{del_flag}</if>
	<if test="pic_url!= null" >,pic_url=#{pic_url}</if>
	<if test="detail_info!= null" >,detail_info=#{detail_info}</if>
	<if test="title!= null" >,title=#{title}</if>
	where id=#{id}
  </update>
  	<!--判断是否存在-->
    <select id="isDataYN" parameterType="tcCourse" resultType="int">
    select count(0) from tc_course where id=#{id}
    </select>
    <!--
	 * <p>信息列表 分页。</p>
	public List<TcCourseBean> findDataIsPage(IEntity dto);
	-->
	<select id="findDataIsPage" resultType="tcCourseBean" parameterType="tcCourse" >
    select
	<include refid="Base_Column_List"/>
	from tc_course t1
    where 1=1
    <choose>
    	<when test="del_flag!=null">
    		and t1.del_flag=#{del_flag}
    	</when>
    	<otherwise>
    	    and t1.del_flag='0'
    	</otherwise>
    </choose>
    order by t1.title assc
    </select>
	<!-- 
	 * <p>信息列表。</p>
	public List<TcCourseBean> findDataIsList(IEntity dto); -->
	<select id="findDataIsList" resultType="tcCourseBean" parameterType="tcCourse" >
	select
	<include refid="Base_Column_List"/>
	from tc_course t1
    where 1=1
    <choose>
    	<when test="del_flag!=null">
    		and t1.del_flag=#{del_flag}
    	</when>
    	<otherwise>
    	    and t1.del_flag='0'
    	</otherwise>
    </choose>
    order by t1.title asc
   </select>
   <!-- 逻辑删除 -->
   <update id="deleteById" parameterType="tcCourse">
	  	update tc_course set version=version+1,last_updated=now(),del_flag='1',update_id=#{update_id}
	   ,update_ip=#{update_ip}
	  	where id=#{id}
   </update>
   <!-- 恢复逻辑删除的数据 -->
   <update id="recoveryDataById" parameterType="tcCourse">
	  	update tc_course set version=version+1,last_updated=now(),del_flag='0',update_id=#{update_id}
	   ,update_ip=#{update_ip}
	  	where id=#{id}
   </update>
</mapper>