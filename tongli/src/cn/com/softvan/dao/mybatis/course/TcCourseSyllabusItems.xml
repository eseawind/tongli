<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.softvan.dao.daointer.course.ITcCourseSyllabusItemsDao" >
  <sql id="Base_Column_List" >
	t1.id,
	t1.student_id,
	t1.course_syllabus_id,
	t1.teacher_id,
	t1.teacher_score,
	t1.teacher_score_note,
	t1.student_status,
	t1.student_status_note,
	t1.note,
	t1.date_created,
	t1.create_id,
	t1.create_ip,
	t1.last_updated,
	t1.update_id,
	t1.update_ip,
	t1.del_flag,
	t1.version
  </sql>
  <select id="selectByPrimaryKey" resultType="tcCourseSyllabusItemsBean" parameterType="tcCourseSyllabusItems" >
    select 
    <include refid="Base_Column_List" />
    from tc_course_syllabus_items
    where id = #{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="tcCourseSyllabusItems" >
    delete from tc_course_syllabus_items
    where course_syllabus_id = #{course_syllabus_id}
  </delete>
  <insert id="insert" parameterType="tcCourseSyllabusItems" >
    insert into tc_course_syllabus_items (
	    id,
		student_id,
		course_syllabus_id,
		teacher_id,
		teacher_score,
		teacher_score_note,
		student_status,
		student_status_note,
		note,
		date_created,
		create_id,
		create_ip,
		last_updated,
		del_flag,
		version
      ) values (
	    #{id},
		#{student_id},
		#{course_syllabus_id},
		#{teacher_id},
		#{teacher_score},
		#{teacher_score_note},
		#{student_status},
		#{student_status_note},
		#{note},
		now(),
		#{create_id},
		#{create_ip},
		now(),
		'0',
		 0
    )
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="tcCourseSyllabusItems" >
    update tc_course_syllabus_items set version=version+1
    ,last_updated=now()
	,update_id=#{update_id}
	,update_ip=#{update_ip}
	<if test="student_id!= null" >,student_id=#{student_id}</if>
	<if test="course_syllabus_id!= null" >,course_syllabus_id=#{course_syllabus_id}</if>
	<if test="teacher_id!= null" >,teacher_id=#{teacher_id}</if>
	<if test="teacher_score!= null" >,teacher_score=#{teacher_score}</if>
	<if test="teacher_score_note!= null" >,teacher_score_note=#{teacher_score_note}</if>
	<if test="student_status!= null" >,student_status=#{student_status}</if>
	<if test="student_status_note!= null" >,student_status_note=#{student_status_note}</if>
	<if test="note!= null" >,note=#{note}</if>
	<if test="del_flag!= null" >,del_flag=#{del_flag}</if>
	where id=#{id}
  </update>
  	<!--判断是否存在-->
    <select id="isDataYN" parameterType="tcCourseSyllabusItems" resultType="int">
    select count(0) from tc_course_syllabus_items where id=#{id}
    </select>
    <!--
	 * <p>信息列表 分页。</p>
	public List<TcCourseSyllabusItemsBean> findDataIsPage(IEntity dto);
	-->
	<select id="findDataIsPage" resultType="tcCourseSyllabusItemsBean" parameterType="tcCourseSyllabusItems" >
    select
	<include refid="Base_Column_List"/>
	from tc_course_syllabus_items t1
	where 1=1
    <choose>
    	<when test="del_flag!=null">
    		and t1.del_flag=#{del_flag}
    	</when>
    	<otherwise>
    	    and t1.del_flag='0'
    	</otherwise>
    </choose>
    <if test="course_syllabus_id!= null" > and course_syllabus_id=#{course_syllabus_id}</if>
    </select>
	<!-- 
	 * <p>信息列表。</p>
	public List<TcCourseSyllabusItemsBean> findDataIsList(IEntity dto); -->
	<select id="findDataIsList" resultType="tcCourseSyllabusItemsBean" parameterType="tcCourseSyllabusItems" >
	select
	<include refid="Base_Column_List"/>
	from tc_course_syllabus_items t1
	where 1=1
    <choose>
    	<when test="del_flag!=null">
    		and t1.del_flag=#{del_flag}
    	</when>
    	<otherwise>
    	    and t1.del_flag='0'
    	</otherwise>
    </choose>
      <if test="course_syllabus_id!= null" > and course_syllabus_id=#{course_syllabus_id}</if>
   </select>
    <!--当前课程关联的学员列表	-->
	<select id="findDataIsListStudent" resultType="tcStudentBean" parameterType="tcCourseSyllabusItems" >
		select
			t2.id,
			t2.name,
			t2.age,
			t2.sex,
			t2.hobby,
			t2.pic_url,
			t2.birthdate
		from tc_course_syllabus_items t1
		left join tc_student t2 on (t2.id=t1.student_id)
	    where t1.course_syllabus_id=#{course_syllabus_id}
	    <choose>
	    	<when test="del_flag!=null">
	    		and t2.del_flag=#{del_flag}
	    	</when>
	    	<otherwise>
	    	    and t2.del_flag='0'
	    	</otherwise>
	    </choose>
	    <if test="limit_s!=null and limit_e!=null">
	     limit #{limit_s},#{limit_e}
	    </if>
   </select>
   	
     <!--当前学员关联的课程列表	-->
     <resultMap type="tcCourseSyllabusBean" id="findDataIsPageCourse1Maps">
   		<result property="student_id" column="student_id" />
		<result property="course_syllabus_item_id" column="course_syllabus_item_id" />
		<result property="teacher_score" column="teacher_score" />
		<result property="teacher_score_note" column="teacher_score_note" />
		<result property="student_status" column="student_status" />
		<result property="student_status_note" column="student_status_note" />
		<result property="id" column="id" />
		<result property="course_id" column="course_id" />
		<result property="teacher_id" column="teacher_id" />
		<result property="day" column="day" />
		<result property="begin_time" column="begin_time" />
		<result property="end_time" column="end_time" />
		<result property="note" column="note" />
		<result property="date_created" column="date_created" />
		<result property="create_id" column="create_id" />
		<result property="create_ip" column="create_ip" />
		<result property="last_updated" column="last_updated" />
		<result property="update_id" column="update_id" />
		<result property="update_ip" column="update_ip" />
		<result property="del_flag" column="del_flag" />
		<result property="version" column="version" />
		<result property="course_status" column="course_status" />
		<result property="detail_info" column="detail_info" />
		<result property="addres" column="addres" />
		<result property="title" column="title" />
		<result property="teacher_name" column="teacher_name" />
		<result property="brief_info" column="brief_info" />
		<collection property="picBeans"
			column="{course_syllabus_id=id}"
			javaType="java.util.List" select="findDataIsListPhoto2"
			ofType="cn.com.softvan.bean.course.TcCourseSyllabusPhotoBean">
		</collection>
   </resultMap>
	<select id="findDataIsPageCourse" resultMap="findDataIsPageCourse1Maps"  parameterType="tcCourseSyllabusItems" >
		select
			t1.student_id,
			t1.id as course_syllabus_item_id,
			t1.teacher_score,
			t1.teacher_score_note,
			t1.student_status,
			t1.student_status_note,
			t2.id,
			t2.course_id,
			t2.teacher_id,
			t2.day,
			t2.begin_time,
			t2.end_time,
			t2.note,
			t2.date_created,
			t2.create_id,
			t2.create_ip,
			t2.last_updated,
			t2.update_id,
			t2.update_ip,
			t2.del_flag,
			t2.version,
			t2.course_status,
			t2.detail_info,
			t2.addres,
			t3.title,
			t4.name as teacher_name,
			t4.brief_info
		from tc_course_syllabus_items t1
		left join tc_course_syllabus t2 on (t2.id=t1.course_syllabus_id)
		left join tc_course t3 on (t3.id=t2.course_id)
		left join tc_member t4 on (t4.id=t2.teacher_id)
		where t1.student_id=#{student_id}
	    <choose>
	    	<when test="del_flag!=null">
	    		and t3.del_flag=#{del_flag}
	    	</when>
	    	<otherwise>
	    	    and t3.del_flag='0'
	    	</otherwise>
	    </choose>
	     <!-- 已完成课程 and TO_SECONDS(t2.end_time)<TO_SECONDS(now())-->
	    <if test="note!=null and note==0">
	   		<![CDATA[
	    	and TO_DAYS(t2.day)<TO_DAYS(now())
			
			]]>
	    </if>
	    <!-- 未完成课程 and TO_SECONDS(t2.end_time)>=TO_SECONDS(now())-->
	    <if test="note!=null and note==1">
	    	<![CDATA[
	    	and TO_DAYS(t2.day)>=TO_DAYS(now())
			
			]]>
	    </if>
	    order by t2.day desc,t2.begin_time asc
   </select>
   <!-- 教师给学员打分 -->
   <update id="updateDataByStudent" parameterType="tcCourseSyllabusItems" >
    update tc_course_syllabus_items set version=version+1
    ,last_updated=now()
	,update_id=#{update_id}
	,update_ip=#{update_ip}
	,student_status=#{student_status}
	,student_status_note=#{student_status_note}
	where id=#{id} 
	and student_status is null 
	and student_id=#{student_id} 
	and course_syllabus_id=#{course_syllabus_id}
	and teacher_id=#{teacher_id}
  </update>
   <!-- 学员给教师打分 -->
   <update id="updateDataByTeacher" parameterType="tcCourseSyllabusItems" >
    update tc_course_syllabus_items set version=version+1
    ,last_updated=now()
	,update_id=#{update_id}
	,update_ip=#{update_ip}
	,teacher_score=#{teacher_score}
	,teacher_score_note=#{teacher_score_note}
	where id=#{id} 
	and teacher_score is null
	and student_id=#{student_id} 
	and course_syllabus_id=#{course_syllabus_id}
	and teacher_id=#{teacher_id}
  </update>
   <!--教师课程表 同时查询 当前课程关联的学员列表2-->
   <resultMap type="tcCourseSyllabusBean" id="findDataIsPageCourse2Maps">
   		<result property="id" column="id" />
		<result property="course_id" column="course_id" />
		<result property="teacher_id" column="teacher_id" />
		<result property="day" column="day" />
		<result property="begin_time" column="begin_time" />
		<result property="end_time" column="end_time" />
		<result property="note" column="note" />
		<result property="date_created" column="date_created" />
		<result property="create_id" column="create_id" />
		<result property="create_ip" column="create_ip" />
		<result property="last_updated" column="last_updated" />
		<result property="update_id" column="update_id" />
		<result property="update_ip" column="update_ip" />
		<result property="del_flag" column="del_flag" />
		<result property="version" column="version" />
		<result property="course_status" column="course_status" />
		<result property="detail_info" column="detail_info" />
		<result property="addres" column="addres" />
		<result property="title" column="title" />
		<result property="teacher_name" column="teacher_name" />
		<result property="brief_info" column="brief_info" />
	    <collection property="itemBeans"
			column="{course_syllabus_id=id}"
			javaType="java.util.List" select="findDataIsListStudent2"
			ofType="cn.com.softvan.bean.course.TcCourseSyllabusItemsBean">
		</collection>
		<collection property="picBeans"
			column="{course_syllabus_id=id}"
			javaType="java.util.List" select="findDataIsListPhoto2"
			ofType="cn.com.softvan.bean.course.TcCourseSyllabusPhotoBean">
		</collection>
   </resultMap>
   <select id="findDataIsPageCourse2" resultMap="findDataIsPageCourse2Maps"  parameterType="tcCourseSyllabusItems" >
		select
			t2.id,
			t2.course_id,
			t2.teacher_id,
			t2.day,
			t2.begin_time,
			t2.end_time,
			t2.note,
			t2.date_created,
			t2.create_id,
			t2.create_ip,
			t2.last_updated,
			t2.update_id,
			t2.update_ip,
			t2.del_flag,
			t2.version,
			t2.course_status,
			t2.detail_info,
			t2.addres,
			t3.title,
			t4.name as teacher_name,
			t4.brief_info
		from tc_course_syllabus t2
		left join tc_course_syllabus_items t1 on (t2.id=t1.course_syllabus_id)
		left join tc_course t3 on (t3.id=t2.course_id)
		left join tc_member t4 on (t4.id=t2.teacher_id)
		where t1.teacher_id=#{teacher_id}
	    <choose>
	    	<when test="del_flag!=null">
	    		and t3.del_flag=#{del_flag}
	    	</when>
	    	<otherwise>
	    	    and t3.del_flag='0'
	    	</otherwise>
	    </choose>
	    <!-- 已完成课程 -->
	    <if test="note!=null and note==0">
	   		<![CDATA[
	    	and TO_DAYS(t2.day)<TO_DAYS(now())
			
			]]><!-- and TO_SECONDS(t2.end_time)<TO_SECONDS(now()) -->
	    </if>
	    <!-- 未完成课程 -->
	    <if test="note!=null and note==1">
	    	<![CDATA[
	    	and TO_DAYS(t2.day)>=TO_DAYS(now())
			
			]]><!-- and TO_SECONDS(t2.end_time)>=TO_SECONDS(now()) -->
	    </if>
	    group by t1.teacher_id,t2.course_id
	    order by t2.day desc,t2.begin_time asc
   </select>
	<select id="findDataIsListStudent2" resultType="tcCourseSyllabusItemsBean" parameterType="java.util.HashMap" >
		select
			t1.student_id,
			t1.id,
			t1.teacher_score,
			t1.teacher_score_note,
			t1.student_status,
			t1.student_status_note,
			t2.name,
			t2.age,
			t2.sex,
			t2.pic_url,
			t2.birthdate
		from tc_course_syllabus_items t1
		left join tc_student t2 on (t2.id=t1.student_id)
	    where t1.course_syllabus_id=#{course_syllabus_id}
	    <choose>
	    	<when test="del_flag!=null">
	    		and t2.del_flag=#{del_flag}
	    	</when>
	    	<otherwise>
	    	    and t2.del_flag='0'
	    	</otherwise>
	    </choose>
   </select>
   <select id="findDataIsListPhoto2" resultType="tcCourseSyllabusPhotoBean" parameterType="java.util.HashMap" >
		select
			id,
			course_syllabus_id,
			pic_url,
			pic_title,
			sort_num
		from tc_course_syllabus_photo
	    where course_syllabus_id=#{course_syllabus_id}
	    <choose>
	    	<when test="del_flag!=null">
	    		and del_flag=#{del_flag}
	    	</when>
	    	<otherwise>
	    	    and del_flag='0'
	    	</otherwise>
	    </choose>
	    order by date_created asc
   </select>
</mapper>