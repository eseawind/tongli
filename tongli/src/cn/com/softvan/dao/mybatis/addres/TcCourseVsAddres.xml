<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.softvan.dao.daointer.addres.ITcCourseVsAddresDao" >
	<!-- 字段列表 -->
	<sql id="Base_Column_List" >
		t1.course_id,
		t1.addres_id
	</sql>
	<!-- 根据主键获取信息详情 -->
	<select id="selectByPrimaryKey" resultType="tcCourseVsAddresBean" parameterType="tcCourseVsAddres" >
		select
		<include refid="Base_Column_List" />
		from tc_course_vs_addres t1 
		where  t1.course_id = #{course_id} and  t1.addres_id = #{addres_id}
	</select>
	<!-- 根据主键物理删除信息 -->
	<delete id="deleteByPrimaryKey" parameterType="tcCourseVsAddres" >
		delete
		from tc_course_vs_addres
		where  course_id = #{course_id} and  addres_id = #{addres_id}
	</delete>
	<!-- 新增单条数据 -->
	<insert id="insert" parameterType="tcCourseVsAddres" >
		insert into tc_course_vs_addres(
		course_id,
		addres_id
	) values (
		#{course_id},
		#{addres_id}
	)
	</insert>
	<!-- 数据更新 -->
	<update id="updateByPrimaryKeySelective" parameterType="tcCourseVsAddres" >
		update tc_course_vs_addres set version=version+1
		,last_updated=now()
		,update_id=#{update_id}
		,update_ip=#{update_ip}
		where  course_id = #{course_id} and  addres_id = #{addres_id}
	</update>
	<!-- 判断是否存在 -->
	<select id="isDataYN" parameterType="tcCourseVsAddres" resultType="int">
		select count(0) from tc_course_vs_addres where  course_id = #{course_id} and  addres_id = #{addres_id}
	</select>
	<!--信息列表 分页 -->
	<select id="findDataIsPage" parameterType="tcCourseVsAddres" resultType="tcCourseVsAddresBean">
		select
		<include refid="Base_Column_List" />
		from tc_course_vs_addres t1 
	</select>
	<!--信息列表 -->
	<select id="findDataIsList" parameterType="tcCourseVsAddres" resultType="tcCourseVsAddresBean">
		select
		<include refid="Base_Column_List" />
		from tc_course_vs_addres t1 
	</select>
	<!-- 逻辑删除 -->
	<update id="deleteById" parameterType="tcCourseVsAddres" >
		update tc_course_vs_addres set version=version+1
		,last_updated=now()
		,update_id=#{update_id}
		,update_ip=#{update_ip}
		,del_flag='1'
		where  course_id = #{course_id} and  addres_id = #{addres_id}
	</update>
	<!-- 恢复逻辑删除 -->
	<update id="recoveryDataById" parameterType="tcCourseVsAddres" >
		update tc_course_vs_addres set version=version+1
		,last_updated=now()
		,update_id=#{update_id}
		,update_ip=#{update_ip}
		,del_flag='0'
		where  course_id = #{course_id} and  addres_id = #{addres_id}
	</update>
</mapper>